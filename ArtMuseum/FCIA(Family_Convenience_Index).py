# -*- coding: utf-8 -*-
"""가족편의지수 파생변수.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1q_zWz40XpJLB7xCpCIUkKPQksBd6f8-2
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import numpy as np

df_parking = pd.read_csv('/content/drive/MyDrive/문화혁신디지털 공모전/데이터/03_입지선정/전국주차장정보표준데이터.csv', encoding = 'cp949')

unique_values_parking = df_parking['제공기관명'].unique()
df_filtered_parking = df_parking[~df_parking['제공기관명'].str.contains('서울특별시|공단|공사', na=False)]
unique_values_parking = df_filtered_parking['제공기관명'].unique()
counts_parking = df_filtered_parking['제공기관명'].value_counts()
value_counts_parking = df_filtered_parking['제공기관명'].value_counts().reset_index()
parking = value_counts_parking.sort_values(by='제공기관명')
parking = parking.rename(columns={'제공기관명': '행정구역','count' : '주차장 수'})
parking

cc = pd.read_csv('/content/drive/MyDrive/문화혁신디지털 공모전/데이터/파생변수/어린이별 초등학교와 유치원.csv', encoding = 'cp949')
df_selected = cc[['지역', '유치원','초등학교']]
df_selected

def extract_first_two_words(text):
    words = text.split()[:2]  # 공백 기준으로 문자열을 나누고 처음 두 개의 단어 선택
    return ' '.join(words)  # 선택된 단어를 다시 공백으로 연결하여 반환

# '행정구역' 열에 적용하여 앞 두 개의 단어만 추출
df_selected['지역'] = df_selected['지역'].apply(extract_first_two_words)
school = df_selected.sort_values(by = '지역')
school['지역'] = school['지역'].str.replace('강원특별자치도', '강원도')
school  = school.rename(columns={'지역' : '행정구역'})

school

boo = pd.read_csv('/content/drive/MyDrive/문화혁신디지털 공모전/데이터/02_지역선정/시군구별_신혼부부_수_20240625170853_수정본.csv', encoding = 'cp949')
boo

filtered_columns = [col for col in boo.columns if '소계' not in col and '서울' not in col]
filtered_df = boo[filtered_columns]
filtered_df = filtered_df[filtered_df['연도'].str.contains('22')]
filtered_df = filtered_df.drop(columns=['연도'])
boo = filtered_df.T

boo.reset_index(inplace=True)
boo = boo.sort_values(by='index')
boo = boo.rename(columns={'index': '행정구역',4 : '신혼부부 수'})
boo

p = pd.read_csv('/content/drive/MyDrive/문화혁신디지털 공모전/데이터/회귀분석/전국_인구수(어린이및전체).csv')
p

p = p[~p['CTPRVN_NM'].str.contains('서울')]
df_selected = p[['CTPRVN_NM', 'SIGNGU_NM', '2022년_계_총인구수']]
df_selected.dropna(inplace=True)
df_selected

df_selected['행정구역'] = df_selected['CTPRVN_NM'] + ' ' + df_selected['SIGNGU_NM']

df_selected = df_selected [['행정구역', '2022년_계_총인구수']]
df_selected['2022년_계_총인구수'] = df_selected['2022년_계_총인구수'].str.replace(',', '').astype(float)
ingu = df_selected.rename(columns={'2022년_계_총인구수': '총 인구 수'})

ingu

df_merged_outer = pd.merge(parking, school, on='행정구역', how='left')
df_merged_outer = pd.merge(df_merged_outer, boo, on='행정구역', how='left')
df_merged_outer = pd.merge(df_merged_outer, ingu, on='행정구역', how='left')

df_merged_outer

df_merged_outer.fillna(0, inplace=True)
df_merged_outer

df = df_merged_outer.groupby('행정구역').sum().reset_index()

df['가족편의지수'] = (df['주차장 수'] + df['유치원'] + df['초등학교'] + df['신혼부부 수']) / df['총 인구 수']

df[['도', '군/구']] = df['행정구역'].apply(lambda x: pd.Series(x.split(' ', 1)))
df

fc = df[['도','군/구','가족편의지수']]
fc

bb = pd.read_excel('/content/drive/MyDrive/문화혁신디지털 공모전/데이터/파생변수/미술관 목록.xlsx')
bb

def extract_first_two_words(text):
    words = text.split()[:2]  # 공백 기준으로 문자열을 나누고 처음 두 개의 단어 선택
    return ' '.join(words)  # 선택된 단어를 다시 공백으로 연결하여 반환

# '행정구역' 열에 적용하여 앞 두 개의 단어만 추출
bb['aa'] = bb['RDNMADR_NM'].apply(extract_first_two_words)
bb
bb[['도', '군/구']] = bb['aa'].apply(lambda x: pd.Series(x.split(' ', 1)))
bb
bb = bb.drop(['aa'], axis=1)
bb

bb.to_csv('/content/drive/MyDrive/문화혁신디지털 공모전/데이터/파생변수/파생변수 추가해주세요.csv', index=False, encoding='utf-8-sig')

qq = pd.read_csv('/content/drive/MyDrive/문화혁신디지털 공모전/데이터/파생변수/파생변수 추가해주세요.csv')
qq

df_merged = pd.merge(qq, fc, how='left', left_on=['도', '군/구'], right_on=['도', '군/구'])

# 조건에 따라 c 열 추가

df_merged['가족편의지수'] = df_merged['가족편의지수'].where((df_merged['도'] == df_merged['도']) & (df_merged['군/구'] == df_merged['군/구']), None)

df_merged

merged_df2 = pd.merge(qq, df, on=['도', '군/구'], how='left')
merged_df2 = merged_df2.rename(columns={'주차장 수': '주차장 수(가족편의지수)', '유치원': '유치원(가족편의지수)', '초등학교': '초등학교(가족편의지수)', '신혼부부 수': '신혼부부 수(가족편의지수)', '총 인구 수': '총 인구 수(가족편의지수)'})
merged_df2

merged_df2.to_csv('/content/drive/MyDrive/문화혁신디지털 공모전/데이터/파생변수/파생변수 추가해주세요_가족편의지수 추가_지희.csv', index=False, encoding='utf-8-sig')
